{"version":3,"file":"default-src_app_pages_catalogs_subcategories_subcategories_component_ts.js","mappings":"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","sources":["./src/app/@core/services/subcategorie.service.ts","./src/app/@graphql/operations/fragment/subcategorie.ts","./src/app/@graphql/operations/mutation/subcategorie.ts","./src/app/@graphql/operations/query/subcategories.ts","./src/app/@pages/catalogs/subcategories/subcategories.component.ts","./src/app/@pages/catalogs/subcategories/subcategories.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { ICatalog } from 'src/app/@core/interfaces/catalog.interface';\nimport { ADD_SUBCATEGORIE, BLOCK_SUBCATEGORIE, UPDATE_SUBCATEGORIE } from 'src/app/@graphql/operations/mutation/subcategorie';\nimport { SUBCATEGORIES_LIST_QUERY, SUBCATEGORIE_ID_QUERY } from 'src/app/@graphql/operations/query/subcategories';\nimport { ApiService } from 'src/app/@graphql/services/api.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubcategoriesService extends ApiService {\n\n  constructor(apollo: Apollo) {\n    super(apollo);\n  }\n\n  add(subcategorie: ICatalog) {\n    return this.set(\n      ADD_SUBCATEGORIE,\n      {\n        subcategorie\n      }, {}).pipe(map((result: any) => {\n        return result.addSubcategorie;\n      })\n      );\n  }\n\n  update(subcategorie: ICatalog) {\n    return this.set(\n      UPDATE_SUBCATEGORIE,\n      {\n        subcategorie\n      }, {}).pipe(map((result: any) => {\n        return result.updateSubcategorie;\n      })\n      );\n  }\n\n  unblock(id: string, unblock: boolean = false, admin: boolean = false) {\n    return this.set(\n      BLOCK_SUBCATEGORIE,\n      {\n        id,\n        unblock,\n        admin\n      }, {}).pipe(map((result: any) => {\n        return result.blockSubcategorie;\n      })\n      );\n  }\n\n  getSubcategories(page: number = 1, itemsPage: number = 10) {\n    return this.get(SUBCATEGORIES_LIST_QUERY, {\n      itemsPage, page\n    }).pipe(map((result: any) => {\n      return result.subcategories;\n    }));\n  }\n\n  next() {\n    return this.get(\n      SUBCATEGORIE_ID_QUERY, {}, {}, false\n    ).pipe(map((result: any) => {\n      return result.subcategorieId.subcategorieId;\n    }));\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const SUBCATEGORIE_FRAGMENT = gql`\n  fragment SubcategorieObject on Subcategorie {\n    id\n    description\n    slug\n    order\n    active\n  }\n`;\n","import gql from 'graphql-tag';\nimport { SUBCATEGORIE_FRAGMENT } from 'src/app/@graphql/operations/fragment/subcategorie';\n\nexport const ADD_SUBCATEGORIE = gql`\n   mutation addSubcategorie($subcategorie: CatalogInput!) {\n      addSubcategorie(subcategorie: $subcategorie) {\n         status\n         message\n         subcategorie {\n            ...SubcategorieObject\n         }\n      }\n   }\n   ${SUBCATEGORIE_FRAGMENT}\n`;\n\nexport const UPDATE_SUBCATEGORIE = gql`\n   mutation updateSubcategorie($subcategorie: CatalogInput!) {\n      updateSubcategorie(subcategorie: $subcategorie) {\n         status\n         message\n         subcategorie {\n            ...SubcategorieObject\n         }\n      }\n   }\n   ${SUBCATEGORIE_FRAGMENT}\n`;\n\nexport const BLOCK_SUBCATEGORIE = gql`\n   mutation blockSubcategorie($id: ID!, $unblock: Boolean, $admin: Boolean) {\n      blockSubcategorie(id: $id, unblock: $unblock, admin: $admin) {\n         status\n         message\n      }\n   }\n`;\n","import gql from 'graphql-tag';\nimport { SUBCATEGORIE_FRAGMENT } from '../fragment/subcategorie';\nimport { RESULT_INFO_FRAGMENT } from '../fragment/result-info';\n\nexport const SUBCATEGORIES_LIST_QUERY = gql`\n  query subcategorieList($page: Int, $itemsPage: Int, $active: ActiveFilterEnum, $filterName: String) {\n    subcategories(page: $page, itemsPage: $itemsPage, active: $active, filterName: $filterName) {\n      info {\n        ...ResultInfoObject\n      }\n      status\n      message\n      subcategories {\n        ...SubcategorieObject\n      }\n    }\n  }\n  ${SUBCATEGORIE_FRAGMENT}\n  ${RESULT_INFO_FRAGMENT}\n`;\n\nexport const CATEGORIE_DATA_QUERY = gql`\n   query subcategorieData($include: Boolean!) {\n    subcategorie{\n         status\n         message\n         subcategorie {\n            ...SubcategorieObject\n         }\n      }\n   }\n   ${SUBCATEGORIE_FRAGMENT}\n`;\n\nexport const SUBCATEGORIE_ID_QUERY = gql`\nquery {\n   subcategorieId{\n      status\n      message\n      subcategorieId\n   }\n}\n`;\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ACTIVE_FILTERS } from 'src/app/@core/constants/filters';\nimport { IResultData } from 'src/app/@core/interfaces/result-data.interface';\nimport { ITableColumns } from 'src/app/@core/interfaces/table-columns.interface';\nimport { SubcategoriesService } from 'src/app/@core/services/subcategorie.service';\nimport { DocumentNode } from 'graphql';\nimport { SUBCATEGORIES_LIST_QUERY } from 'src/app/@graphql/operations/query/subcategories';\nimport { optionsWithDetails } from 'src/app/@shared/alert/alerts';\nimport { basicAlert } from 'src/app/@shared/alert/toasts';\nimport { TYPE_ALERT } from 'src/app/@shared/alert/values.config';\nimport { CaptureCatComponent } from 'src/app/@shared/capture-cat/capture-cat.component';\nimport { TablePaginationService } from 'src/app/@shared/table-pagination/table-pagination.service';\nimport { Catalog } from '@core/models/catalog.models';\nimport { ICatalog } from '@core/interfaces/catalog.interface';\n\n@Component({\n  selector: 'app-subcategories',\n  templateUrl: './subcategories.component.html',\n  styleUrls: ['./subcategories.component.scss']\n})\nexport class SubcategoriesComponent implements OnInit {\n  query: DocumentNode = SUBCATEGORIES_LIST_QUERY;\n  context: object;\n  itemsPage: number;\n  resultData: IResultData;\n  include: boolean;\n  columns: Array<ITableColumns>;\n  filterActiveValues: ACTIVE_FILTERS;\n  mostrarBoton: boolean;\n  catalog: Catalog;\n  editMode = false;\n  nextId: string;\n\n  @ViewChild('mdCaptureCat') modal: CaptureCatComponent;\n  @Input() datosEnviar: FormData = new FormData();\n\n  constructor(\n    private subcategoriesService: SubcategoriesService,\n    private tablePaginationService: TablePaginationService\n    ) {\n      // Obtiene el siguiente Id del Catálogo\n      this.subcategoriesService.next().subscribe(result => {\n        this.nextId = result;\n      });\n    }\n\n  ngOnInit(): void {\n    this.context = {};\n    this.itemsPage = 10;\n    this.resultData = {\n      listKey: 'subcategories',\n      definitionKey: 'subcategories',\n      title: 'Subcategorias'\n    };\n    this.include = false;\n    this.filterActiveValues = ACTIVE_FILTERS.ALL;\n    this.columns = [\n      {\n        property: 'id',\n        label: '#',\n        class: 'clave'\n      },\n      {\n        property: 'order',\n        label: 'Orden',\n        class: 'clave'\n      },\n      {\n        property: 'description',\n        label: 'Marca',\n        class: 'descriptionShort'\n      },\n      {\n        property: 'slug',\n        label: 'Slug',\n        class: ''\n      },\n      {\n        property: 'active',\n        label: 'Activo?',\n        class: 'clave'\n      }\n    ];\n  }\n\n  async takeAction($event) {\n    // Obtiene la informacion para las acciones\n    const action = $event[0];\n    const catalog = $event[1];\n    this.mostrarBoton = true;\n    switch (action) {\n      case 'add':                                       // Agregar elemento\n        this.addForm(this.onNewCatalog());\n        break;\n      case 'edit':                                      // Modificar elemento\n        this.updateForm(catalog);\n        break;\n      case 'info':                                      // Mostrar información del elemento\n        this.mostrarBoton = false;\n        this.updateForm(catalog, true, true);\n        break;\n      case 'block':                                     // Bloquear elemento\n        this.unblockForm(catalog, false);\n        break;\n      case 'unblock':                                     // Bloquear elemento\n        this.unblockForm(catalog, true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onNewCatalog() {\n    let catalog: Catalog;\n    return catalog = {\n      id: this.nextId,\n      description: '',\n      slug: '',\n      order: 1000,\n      active: true\n    };\n  }\n\n  private async addForm(catalog: Catalog, editMode: boolean = false) {\n    this.editMode = editMode;\n    this.modal.onOpenModal(catalog, editMode);\n  }\n\n  private async updateForm(catalog: Catalog, editMode: boolean = true, onlyView: boolean = false) {\n    this.editMode = editMode;\n    this.modal.onOpenModal(catalog, editMode, onlyView);\n  }\n\n  catalogBack(event) {\n    if (event.tipo === 'item') {\n      if (this.editMode) {                        // Si es un  para editar\n        this.updateCatalog(event.item);\n      } else {                                    // Si es un catalogo nuevo\n        this.addCatalog(event.item);\n      }\n    } else {\n\n    }\n  }\n\n  private addCatalog(catalog: ICatalog) {\n    this.subcategoriesService.add(catalog).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n          setTimeout(() => {\n            this.modal.onCloseModal();\n            this.tablePaginationService.refreshTable();\n          }, 2900);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n\n  private updateCatalog(catalog: ICatalog) {\n    if (catalog.description !== '') {\n      this.subcategoriesService.update(catalog).subscribe(\n        (res: any) => {\n          if (res.status) {\n            basicAlert(TYPE_ALERT.SUCCESS, res.message);\n            setTimeout(() => {\n              this.modal.onCloseModal();\n              this.tablePaginationService.refreshTable();\n            }, 2900);\n          } else {\n            basicAlert(TYPE_ALERT.WARNING, res.message);\n          }\n        }\n      );\n    }\n  }\n\n  private async unblockForm(brand: any, unblock: boolean) {\n    const result = (unblock) ?\n      await optionsWithDetails(\n        'Desbloquear?',\n        `Si desbloqueas el item seleccionado, se mostrara en la lista`,\n        450,\n        'No desbloquear',\n        'Si desbloquear'\n      )\n      :\n      await optionsWithDetails(\n        'Bloquear?',\n        `Si bloqueas el item seleccionado, no se mostrara en la lista`,\n        430,\n        'No bloquear',\n        'Si bloquear'\n      );\n    if (result === false) {             // Si el resultado es falso, queremos bloquear\n      this.unblockBrand(brand.id, unblock, true);\n    }\n    this.tablePaginationService.refreshTable();\n  }\n\n  private unblockBrand(id: string, unblock: boolean = false, admin: boolean = false) {\n    this.subcategoriesService.unblock(id, unblock, admin).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n}\n","<app-table-pagination [query]=\"query\" [context]=\"context\" [itemsPage]=\"itemsPage\" [resultData]=\"resultData\"\n  [include]=\"include\" [tableColumns]=\"columns\" [filterActiveValues]=\"filterActiveValues\"\n  (manageItem)=\"takeAction($event)\"></app-table-pagination>\n\n  <app-capture-cat (catalogChange)=\"catalogBack($event)\" #mdCaptureCat></app-capture-cat>\n"],"names":[],"sourceRoot":"webpack:///"}