{"version":3,"file":"default-src_app_pages_catalogs_users_users_component_ts.js","mappings":"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","sources":["./src/app/@core/services/user.service.ts","./src/app/@graphql/operations/mutation/user.ts","./src/app/@pages/catalogs/users/capture-user/capture-user.component.ts","./src/app/@pages/catalogs/users/capture-user/capture-user.component.html","./src/app/@pages/catalogs/users/users.component.ts","./src/app/@pages/catalogs/users/users.component.html"],"sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { ACTIVE_EMAIL_USER, ACTIVE_USER, BLOCK_USER, REGISTER_USER, UPDATE_USER } from 'src/app/@graphql/operations/mutation/user';\nimport { USERS_ID_QUERY, USERS_LIST_QUERY } from 'src/app/@graphql/operations/query/users';\nimport { ApiService } from 'src/app/@graphql/services/api.service';\nimport { map } from 'rxjs/operators';\nimport { IUser } from '@core/interfaces/user.interface';\nimport { ACTIVE_FILTERS } from '@core/constants/filters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService extends ApiService {\n\n  constructor(apollo: Apollo) {\n    super(apollo);\n  }\n\n  getUsers(page: number = 1, itemsPage: number = 10, filterActiveValues: ACTIVE_FILTERS = ACTIVE_FILTERS.ACTIVE) {\n    return this.get(USERS_LIST_QUERY, {\n      include: true, itemsPage, page, filterActiveValues\n    }).pipe(map((result: any) => {\n      return result.users;\n    }));\n  }\n\n  register(user: IUser) {\n    return this.set(REGISTER_USER, {\n      user,\n      include: false\n    }).pipe(\n      map((result: any) => {\n        return result.register;\n      })\n    );\n  }\n\n  update(user: IUser) {\n    return this.set(\n      UPDATE_USER,\n      {\n        user,\n        include: false\n      }, {}).pipe(map((result: any) => {\n        return result.updateUser;\n      })\n      );\n  }\n\n  active(token: string, password: string) {\n    const user = JSON.parse(atob(token.split('.')[1])).user;\n    return this.set(ACTIVE_USER, {\n      id: user.id,\n      password\n    }, {\n      headers: new HttpHeaders({\n        Authorization: token\n      })\n    }).pipe(map((result: any) => {\n      return result.activeUserAction;\n    }));\n  }\n\n  unblock(id: string, unblock: boolean = false, admin: boolean = false) {\n    return this.set(\n      BLOCK_USER,\n      {\n        id,\n        unblock,\n        admin\n      }, {}).pipe(map((result: any) => {\n        return result.blockUser;\n      })\n      );\n  }\n\n  sendEmailActive(id: string, email: string) {\n    return this.set(\n      ACTIVE_EMAIL_USER, {\n      id,\n      email\n    }).pipe(map((result: any) => {\n      return result.activeUserEmail;\n    }));\n  }\n\n  next() {\n    return this.get(\n      USERS_ID_QUERY, {}, {}, false\n    ).pipe(map((result: any) => {\n      return result.userId.userId;\n    }));\n  }\n}\n\n\n\n\n\n\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// import { User } from '../models/auth.models';\n\n// @Injectable({ providedIn: 'root' })\n// export class UserProfileService {\n//     constructor(private http: HttpClient) { }\n\n//     getAll(page: number = 1, itemsPage: number = 10) {\n//         return this.http.get<User[]>(`/api/login`);\n//     }\n\n//     register(user: User) {\n//         return this.http.post(`/users/register`, user);\n//     }\n// }\n","import gql from 'graphql-tag';\nimport { USER_FRAGMENT } from 'src/app/@graphql/operations/fragment/user';\n\nexport const REGISTER_USER = gql`\n   mutation addUser($user: UserInput!, $include: Boolean!) {\n      register(user: $user) {\n         status\n         message\n         user {\n            ...UserObject\n         }\n      }\n   }\n   ${USER_FRAGMENT}\n`;\n\nexport const UPDATE_USER = gql`\n   mutation updateUser($user: UserInput!, $include: Boolean!) {\n      updateUser(user: $user) {\n         status\n         message\n         user {\n            ...UserObject\n         }\n      }\n   }\n   ${USER_FRAGMENT}\n`;\n\nexport const BLOCK_USER = gql`\n   mutation blockUser($id: ID!, $unblock: Boolean, $admin: Boolean) {\n      blockUser(id: $id, unblock: $unblock, admin: $admin) {\n         status\n         message\n      }\n   }\n`;\n\nexport const ACTIVE_EMAIL_USER = gql`\n   mutation activeUserEmail($id: ID!, $email: String!) {\n      activeUserEmail(\n         id: $id,\n         email: $email\n      )  {\n            status\n            message\n      }\n   }\n`;\n\nexport const ACTIVE_USER = gql`\n   mutation activeUser($id: ID!, $password: String!) {\n      activeUserAction(\n         id: $id,\n         password: $password\n      )  {\n            status\n            message\n      }\n   }\n`;\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IUser } from '@core/interfaces/user.interface';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { basicAlert } from '@shared/alert/toasts';\nimport { TYPE_ALERT } from '@shared/alert/values.config';\n\n@Component({\n  selector: 'app-capture-user',\n  templateUrl: './capture-user.component.html',\n  styleUrls: ['./capture-user.component.scss']\n})\nexport class CaptureUserComponent implements OnInit {\n\n  titulo = 'Capturando usuario';\n  @ViewChild('content') content: any;\n  @Input() role = 'ADMIN';\n  @Output() datosEnviar: FormData = new FormData();\n  @Output() userChange = new EventEmitter<IUser>();\n  @Input() user: IUser = {\n    id: '',\n    name: '',\n    lastname: '',\n    email: '',\n    password: '',\n    role: this.role,\n    active: false\n  };\n  submitted = false;\n  editMode = false;\n  onlyView = false;\n  roleView: string;\n  estatus: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public modal: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n    this.roleView = 'ADMIN';\n    this.estatus = 'Inactivo';\n  }\n\n  onSetCatalog(user: IUser) {\n    // this.captureForm.controls.email.setValue(user.email);\n    // if (!this.editMode) {\n    //   this.captureForm.controls.password.setValue(user.password);\n    // }\n    // this.captureForm.controls.name.setValue(user.name);\n    // this.captureForm.controls.lastname.setValue(user.lastname);\n    // this.captureForm.controls.role.setValue(user.role);\n    // this.captureForm.controls.active.setValue(user.active);\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // if (this.captureForm.invalid) {\n    //   basicAlert(TYPE_ALERT.WARNING, 'Verificar campos');\n    //   return;\n    // }\n    this.onSetCatalog(this.user);\n    this.userChange.emit(this.user);\n  }\n\n  onOpenModal(user: IUser, editMode: boolean = false, onlyView: boolean = false) {\n    this.user = user;\n    if (!editMode) {\n      this.user.role = 'ADMIN';\n    }\n    this.editMode = editMode;\n    this.onlyView = onlyView;\n    // Cambia el título de acuerdo a si es solo vista, edición o nuevo.\n    this.titulo = this.editMode ? onlyView ? 'Consultar' : 'Modificar' : 'Agregar';\n    // Campos para editar\n    const valorEditar = this.editMode ? this.user.active ? 'Activo' : 'Inactivo' : 'Activo';\n    // this.captureForm.controls.email.setValue(this.user.email);\n    // this.captureForm.controls.estatus.setValue(valorEditar);\n    // this.captureForm.controls.name.setValue(this.user.name);\n    // this.captureForm.controls.lastname.setValue(this.user.lastname);\n    // this.captureForm.controls.role.setValue(this.user.role);\n    console.log('this.user.role: ', this.user.role);\n    this.roleView = this.asignaRolView(this.user.role);\n    this.modal.open(this.content, { size: 'lg' });\n  }\n\n  onCloseModal() {\n    this.modal.dismissAll();\n  }\n\n  asignRol(role: string, roleView: string) {\n    this.user.role = role;\n    // this.captureForm.controls.role.setValue(role);\n    this.roleView = roleView;\n  }\n\n  asignaRolView(role: string) {\n    switch (role) {\n      case 'ADMIN':\n        return 'Administrador';\n      case 'SELLER':\n        return 'Ventas';\n      default:\n        return '';\n    }\n  }\n}\n","<ng-template #content role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">{{titulo}}</h5>\n    <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\" (click)=\"onCloseModal()\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form (ngSubmit)=\"onSubmit()\" #forma=\"ngForm\">\n      <div class=\"container-fluid p-0\">\n        <div class=\"row\">\n          <div class=\"col-4 form-group\">\n            <label for=\"email\">Correo</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" #email=\"ngModel\"\n              placeholder=\"email\" [(ngModel)]=\"user.email\"\n              [ngClass]=\"{'is-valid': !email.invalid, 'is-invalid': email.invalid}\"\n              pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n              required [attr.disabled]=\"editMode ? true : null\">\n            <div class=\"alert alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n              <div *ngIf=\"email.errors.required\">\n                Introduzca un correo electronico válido.\n              </div>\n              <div *ngIf=\"email.errors && email.errors.pattern\">\n                El corrreo electronico no tiene el formato correcto.\n              </div>\n            </div>\n          </div>\n          <div class=\"col-2 form-group\">\n            <div *ngIf=\"!editMode\">\n              <label for=\"password\">Contraseña</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #password=\"ngModel\"\n                placeholder=\"Password\" [(ngModel)]=\"user.password\"\n                [ngClass]=\"{'is-valid': !password.invalid, 'is-invalid': password.invalid}\" required\n                [attr.disabled]=\"editMode ? true : null\">\n              <div class=\"alert alert-danger\"\n                *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n                <div *ngIf=\"password.errors.required\">\n                  Teclea el Password.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-3 form-group\">\n            <label for=\"role\">Role/Permisos</label>\n            <div class=\"dropdown\" ngbDropdown>\n              <button class=\"btn btn-light dropdown-toggle\" type=\"button\" name=\"role\" id=\"role\" ngbDropdownToggle\n                [attr.disabled]=\"onlyView ? true : null\">\n                Rol {{ roleView }}<i class=\"mdi mdi-chevron-down\"></i>\n              </button>\n              <div class=\"dropdown-menu\" ngbDropdownMenu>\n                <a class=\"dropdown-item\" (click)=\"asignRol('SELLER', 'Ventas');\">Ventas</a>\n                <a class=\"dropdown-item\" (click)=\"asignRol('ADMIN', 'Administrador');\">Administrador</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-3 form-group\">\n            <label for=\"estatus\">Estatus</label>\n            <input type=\"text\" class=\"form-control\" id=\"estatus\" name=\"estatus\" [value]=\"estatus\"\n              [attr.disabled]=\"true\">\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">Nombre(s)</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"user.name\"\n              placeholder=\"Teclea el nombre\" pattern=\"[ A-Za-zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙ.-]+\"\n              required [attr.disabled]=\"onlyView ? true : null\">\n            <div class=\"alert alert-danger\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n              <div *ngIf=\"name.errors.required\">\n                Introduzca su nombre/s por favor.\n              </div>\n              <div *ngIf=\"name.errors && name.errors.pattern\">\n                No se aceptan numeros, ni caracteres speciales.\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6 form-group\">\n            <label for=\"lastname\">Apellido(s)</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastname\" name=\"lastname\" #lastname=\"ngModel\"\n              [(ngModel)]=\"user.lastname\" placeholder=\"Teclea los apellidos\" required\n              pattern=\"[ A-Za-zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙ.-]+\"\n              [attr.disabled]=\"onlyView ? true : null\">\n            <div class=\"alert alert-danger\" *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\">\n              <div *ngIf=\"lastname.errors.required\">\n                Introduzca su/s apellido/s por favor.\n              </div>\n              <div *ngIf=\"lastname.errors && lastname.errors.pattern\">\n                No se aceptan numeros, ni caracteres speciales.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"onCloseModal()\">Cancelar</button>\n    <button *ngIf=\"!onlyView\" type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n      [disabled]=\"!forma.valid\">Grabar</button>\n  </div>\n</ng-template>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ACTIVE_FILTERS } from 'src/app/@core/constants/filters';\nimport { IResultData } from 'src/app/@core/interfaces/result-data.interface';\nimport { ITableColumns } from 'src/app/@core/interfaces/table-columns.interface';\nimport { UsersService } from 'src/app/@core/services/user.service';\nimport { DocumentNode } from 'graphql';\nimport { USERS_LIST_QUERY } from 'src/app/@graphql/operations/query/users';\nimport { TablePaginationService } from 'src/app/@shared/table-pagination/table-pagination.service';\nimport { CaptureUserComponent } from './capture-user/capture-user.component';\nimport { basicAlert } from '@shared/alert/toasts';\nimport { TYPE_ALERT } from '@shared/alert/values.config';\nimport { optionsWithDetails } from '@shared/alert/alerts';\nimport { IUser } from '@core/interfaces/user.interface';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n  query: DocumentNode = USERS_LIST_QUERY;\n  context: object;\n  itemsPage: number;\n  resultData: IResultData;\n  include: boolean;\n  columns: Array<ITableColumns>;\n  filterActiveValues: ACTIVE_FILTERS;\n  mostrarBoton: boolean;\n  user: IUser;\n  editMode = false;\n  nextId: string;\n  title: string = 'Catálogo de Usuarios';\n  role: string = 'ADMIN';\n\n  @ViewChild('mdCaptureCat') modal: CaptureUserComponent;\n  @Input() datosEnviar: FormData = new FormData();\n\n  constructor(\n    private usersService: UsersService,\n    private tablePaginationService: TablePaginationService\n  ) { }\n\n  ngOnInit(): void {\n    this.context = {};\n    this.itemsPage = 10;\n    this.resultData = {\n      listKey: 'users',\n      definitionKey: 'users',\n      title: 'Usuarios'\n    };\n    this.include = false;\n    this.filterActiveValues = ACTIVE_FILTERS.ALL;\n    this.columns = [\n      {\n        property: 'id',\n        label: '#',\n        class: 'clave'\n      },\n      {\n        property: 'name',\n        label: 'Nombre',\n        class: ''\n      },\n      {\n        property: 'lastname',\n        label: 'Apellido',\n        class: ''\n      },\n      {\n        property: 'email',\n        label: 'Correo',\n        class: ''\n      },\n      {\n        property: 'role',\n        label: 'Permisos',\n        class: ''\n      },\n      {\n        property: 'active',\n        label: 'Activo?',\n        class: 'clave'\n      }\n    ];\n  }\n\n  async takeAction($event) {\n    // Obtiene la informacion para las acciones\n    const action = $event[0];\n    const user = $event[1];\n    this.mostrarBoton = true;\n    switch (action) {\n      case 'add':                                       // Agregar elemento\n        this.addForm(this.onNewCatalog());\n        break;\n      case 'edit':                                      // Modificar elemento\n        this.updateForm(user);\n        break;\n      case 'info':                                      // Mostrar información del elemento\n        this.mostrarBoton = false;\n        this.updateForm(user, true, true);\n        break;\n      case 'block':                                     // Bloquear elemento\n        this.unblockForm(user, false);\n        break;\n      case 'unblock':                                     // Bloquear elemento\n        this.unblockForm(user, true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onNewCatalog() {\n    let user: IUser;\n    return user = {\n      id: this.nextId,\n      email: '',\n      password: '',\n      name: '',\n      lastname: '',\n      active: false\n    };\n  }\n\n  private async addForm(user: IUser, editMode: boolean = false) {\n    this.editMode = editMode;\n    this.modal.onOpenModal(user, editMode);\n  }\n\n  private async updateForm(user: IUser, editMode: boolean = true, onlyView: boolean = false) {\n    this.editMode = editMode;\n    this.modal.onOpenModal(user, editMode, onlyView);\n  }\n\n  userBack(event) {\n    this.user = event;\n    if (this.editMode) {                        // Si es un  para editar\n      this.updateCatalog(this.user);\n    } else {                                    // Si es un usero nuevo\n      this.addCatalog(this.user);\n    }\n  }\n\n  private addCatalog(user: IUser) {\n    this.usersService.register(user).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n          this.usersService.sendEmailActive(res.user.id, user.email).subscribe(\n            resEmail => {\n              (resEmail.status) ?\n                basicAlert(TYPE_ALERT.SUCCESS, resEmail.message) :\n                basicAlert(TYPE_ALERT.WARNING, resEmail.message);\n            }\n          );\n          setTimeout(() => {\n            this.tablePaginationService.refreshTable();\n            this.modal.onCloseModal();\n          }, 2900);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n\n  private updateCatalog(user: IUser) {\n    if (user.email !== '') {\n      this.usersService.update(user).subscribe(\n        (res: any) => {\n          if (res.status) {\n            basicAlert(TYPE_ALERT.SUCCESS, res.message);\n            setTimeout(() => {\n              this.modal.onCloseModal();\n              this.tablePaginationService.refreshTable();\n            }, 2900);\n          } else {\n            basicAlert(TYPE_ALERT.WARNING, res.message);\n          }\n        }\n      );\n    }\n  }\n\n  private async unblockForm(brand: any, unblock: boolean) {\n    const result = (unblock) ?\n      await optionsWithDetails(\n        'Desbloquear?',\n        `Si desbloqueas el item seleccionado, se mostrara en la lista`,\n        450,\n        'No desbloquear',\n        'Si desbloquear'\n      )\n      :\n      await optionsWithDetails(\n        'Bloquear?',\n        `Si bloqueas el item seleccionado, no se mostrara en la lista`,\n        430,\n        'No bloquear',\n        'Si bloquear'\n      );\n    if (result === false) {             // Si el resultado es falso, queremos bloquear\n      this.unblockBrand(brand.id, unblock, true);\n    }\n    this.tablePaginationService.refreshTable();\n  }\n\n  private unblockBrand(id: string, unblock: boolean = false, admin: boolean = false) {\n    this.usersService.unblock(id, unblock, admin).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n}\n","<app-table-pagination [query]=\"query\" [context]=\"context\" [itemsPage]=\"itemsPage\" [resultData]=\"resultData\"\n  [include]=\"include\" [tableColumns]=\"columns\" [filterActiveValues]=\"filterActiveValues\" [title]=\"title\" [role]=\"role\"\n  (manageItem)=\"takeAction($event)\"></app-table-pagination>\n\n<app-capture-user (userChange)=\"userBack($event)\" #mdCaptureCat></app-capture-user>\n"],"names":[],"sourceRoot":"webpack:///"}