{"version":3,"file":"default-src_app_pages_catalogs_brands_brands_component_ts.js","mappings":"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","sources":["./src/app/@pages/catalogs/brands/brands.component.ts","./src/app/@pages/catalogs/brands/brands.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ACTIVE_FILTERS } from 'src/app/@core/constants/filters';\nimport { IResultData } from 'src/app/@core/interfaces/result-data.interface';\nimport { BrandsService } from 'src/app/@core/services/brand.service';\nimport { DocumentNode } from 'graphql';\nimport { BRANDS_LIST_QUERY } from 'src/app/@graphql/operations/query/brands';\nimport { ITableColumns } from 'src/app/@core/interfaces/table-columns.interface';\nimport { TablePaginationService } from 'src/app/@shared/table-pagination/table-pagination.service';\nimport { CaptureCatComponent } from 'src/app/@shared/capture-cat/capture-cat.component';\nimport { ImportarComponent } from 'src/app/@shared/importar/importar.component';\nimport { basicAlert } from 'src/app/@shared/alert/toasts';\nimport { TYPE_ALERT } from 'src/app/@shared/alert/values.config';\nimport { optionsWithDetails } from 'src/app/@shared/alert/alerts';\nimport { ISupplier } from '@core/interfaces/supplier.interface';\nimport { Catalog } from '@core/models/catalog.models';\nimport { ICatalog } from '@core/interfaces/catalog.interface';\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.scss']\n})\nexport class BrandsComponent implements OnInit {\n  query: DocumentNode = BRANDS_LIST_QUERY;\n  context: object;\n  itemsPage: number;\n  resultData: IResultData;\n  include: boolean;\n  columns: Array<ITableColumns>;\n  filterActiveValues: ACTIVE_FILTERS;\n  mostrarBoton: boolean;\n  catalog: Catalog;\n  editMode = false;\n  nextId: string;\n  title = 'Catálogo de Marcas';\n  mostrarImport = true;\n  importados: [ICatalog];\n\n  @ViewChild('mdCaptureCat') modal: CaptureCatComponent;\n  @ViewChild('mdImportCat') modalImport: ImportarComponent;\n  @Input() datosEnviar: FormData = new FormData();\n\n  constructor(\n    private brandsService: BrandsService,\n    private tablePaginationService: TablePaginationService\n  ) { }\n\n  ngOnInit(): void {\n    this.context = {};\n    this.itemsPage = 10;\n    this.resultData = {\n      listKey: 'brands',\n      definitionKey: 'brands',\n      title: 'Marcas',\n      apiExterna: 'marcas'\n    };\n    this.include = false;\n    this.filterActiveValues = ACTIVE_FILTERS.ALL;\n    this.columns = [\n      {\n        property: 'id',\n        label: '#',\n        class: 'clave'\n      },\n      {\n        property: 'order',\n        label: 'Orden',\n        class: 'clave'\n      },\n      {\n        property: 'description',\n        label: 'Marca',\n        class: 'descriptionShort'\n      },\n      {\n        property: 'slug',\n        label: 'Slug',\n        class: 'descriptionShort'\n      },\n      {\n        property: 'active',\n        label: 'Activo?',\n        class: 'clave'\n      }\n    ];\n    this.catalog = new Catalog();\n    this.NextId();\n  }\n\n  NextId() {\n    // Obtiene el siguiente Id del Catálogo\n    this.brandsService.next().subscribe(result => {\n      this.nextId = result;\n    });\n  }\n\n  async takeAction($event) {\n    // Obtiene la informacion para las acciones\n    const action = $event[0];\n    const catalog = $event[1];\n    this.mostrarBoton = true;\n    switch (action) {\n      case 'add':                                       // Agregar elemento\n        this.onNewCatalog();\n        this.addForm();\n        break;\n      case 'edit':                                      // Modificar elemento\n        this.updateForm(catalog);\n        break;\n      case 'info':                                      // Mostrar información del elemento\n        this.mostrarBoton = false;\n        this.updateForm(catalog, true, true);\n        break;\n      case 'import':\n        this.importForm([catalog]);\n        break;\n      case 'block':                                     // Bloquear elemento\n        this.unblockForm(catalog, false);\n        break;\n      case 'unblock':                                     // Bloquear elemento\n        this.unblockForm(catalog, true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onNewCatalog() {\n    this.catalog = new Catalog();\n    this.NextId();\n    this.catalog = {\n      id: this.nextId,\n      description: '',\n      slug: '',\n      order: 1000,\n      active: true\n    };\n  }\n\n  private async addForm(editMode: boolean = false) {\n    this.editMode = editMode;\n    setTimeout(() => {\n      this.modal.onOpenModal(this.catalog, editMode);\n    }, 2000);\n  }\n\n  private async updateForm(catalog: Catalog, editMode: boolean = true, onlyView: boolean = false) {\n    this.editMode = editMode;\n    this.modal.onOpenModal(catalog, editMode, onlyView);\n  }\n\n  private async importForm(catalog: [Catalog]) {\n    this.modalImport.onOpenModal(catalog);\n  }\n\n  catalogBack(event) {\n    if (event.tipo === 'item') {\n      if (this.editMode) {                        // Si es un  para editar\n        this.updateCatalog(event.item);\n      } else {                                    // Si es un catalogo nuevo\n        this.addCatalog(event.item);\n      }\n    }\n  }\n\n  private addCatalog(catalog: ICatalog) {\n    this.brandsService.add(catalog).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n          setTimeout(() => {\n            this.modal.onCloseModal();\n            this.tablePaginationService.refreshTable();\n          }, 2900);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n\n  importaBack(event) {\n    if (event.tipo === 'list') {\n      this.importados = event.list;\n      this.addListCatalog(this.importados, event.suppliersCat);\n    }\n  }\n\n  private addListCatalog(brands: [ICatalog], supplier: ISupplier) {\n    this.brandsService.addList(brands, supplier).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n          setTimeout(() => {\n            this.modal.onCloseModal();\n            this.tablePaginationService.refreshTable();\n          }, 2900);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n\n  private updateCatalog(catalog: ICatalog) {\n    if (catalog.description !== '') {\n      this.brandsService.update(catalog).subscribe(\n        (res: any) => {\n          if (res.status) {\n            basicAlert(TYPE_ALERT.SUCCESS, res.message);\n            setTimeout(() => {\n              this.modal.onCloseModal();\n              this.tablePaginationService.refreshTable();\n            }, 2900);\n          } else {\n            basicAlert(TYPE_ALERT.WARNING, res.message);\n          }\n        }\n      );\n    }\n  }\n\n  private async unblockForm(brand: any, unblock: boolean) {\n    const result = (unblock) ?\n      await optionsWithDetails(\n        'Desbloquear?',\n        `Si desbloqueas el item seleccionado, se mostrara en la lista`,\n        450,\n        'No desbloquear',\n        'Si desbloquear'\n      )\n      :\n      await optionsWithDetails(\n        'Bloquear?',\n        `Si bloqueas el item seleccionado, no se mostrara en la lista`,\n        430,\n        'No bloquear',\n        'Si bloquear'\n      );\n    if (result === false) {             // Si el resultado es falso, queremos bloquear\n      this.unblockBrand(brand.id, unblock, true);\n    }\n    this.tablePaginationService.refreshTable();\n  }\n\n  private unblockBrand(id: string, unblock: boolean = false, admin: boolean = false) {\n    this.brandsService.unblock(id, unblock, admin).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n}\n","<app-table-pagination [query]=\"query\" [context]=\"context\" [itemsPage]=\"itemsPage\" [resultData]=\"resultData\"\n  [include]=\"include\" [tableColumns]=\"columns\" [filterActiveValues]=\"filterActiveValues\" [title]=\"title\"\n  [mostrarImport]=\"mostrarImport\" (manageItem)=\"takeAction($event)\"></app-table-pagination>\n\n<app-capture-cat (catalogChange)=\"catalogBack($event)\" #mdCaptureCat></app-capture-cat>\n\n<app-importar (importaChange)=\"importaBack($event)\" #mdImportCat [resultData]=\"resultData\"></app-importar>\n"],"names":[],"sourceRoot":"webpack:///"}