{"version":3,"file":"src_app_core_services_user_service_ts-src_app_pages_catalogs_clients_clients-routing_module_t-686b3d.js","mappings":"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","sources":["./src/app/@core/services/user.service.ts","./src/app/@graphql/operations/mutation/user.ts","./src/app/@pages/catalogs/clients/clients-routing.module.ts","./src/app/@pages/catalogs/clients/clients.module.ts"],"sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { ACTIVE_EMAIL_USER, ACTIVE_USER, BLOCK_USER, REGISTER_USER, UPDATE_USER } from 'src/app/@graphql/operations/mutation/user';\nimport { USERS_ID_QUERY, USERS_LIST_QUERY } from 'src/app/@graphql/operations/query/users';\nimport { ApiService } from 'src/app/@graphql/services/api.service';\nimport { map } from 'rxjs/operators';\nimport { IUser } from '@core/interfaces/user.interface';\nimport { ACTIVE_FILTERS } from '@core/constants/filters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService extends ApiService {\n\n  constructor(apollo: Apollo) {\n    super(apollo);\n  }\n\n  getUsers(page: number = 1, itemsPage: number = 10, filterActiveValues: ACTIVE_FILTERS = ACTIVE_FILTERS.ACTIVE) {\n    return this.get(USERS_LIST_QUERY, {\n      include: true, itemsPage, page, filterActiveValues\n    }).pipe(map((result: any) => {\n      return result.users;\n    }));\n  }\n\n  register(user: IUser) {\n    return this.set(REGISTER_USER, {\n      user,\n      include: false\n    }).pipe(\n      map((result: any) => {\n        return result.register;\n      })\n    );\n  }\n\n  update(user: IUser) {\n    return this.set(\n      UPDATE_USER,\n      {\n        user,\n        include: false\n      }, {}).pipe(map((result: any) => {\n        return result.updateUser;\n      })\n      );\n  }\n\n  active(token: string, password: string) {\n    const user = JSON.parse(atob(token.split('.')[1])).user;\n    return this.set(ACTIVE_USER, {\n      id: user.id,\n      password\n    }, {\n      headers: new HttpHeaders({\n        Authorization: token\n      })\n    }).pipe(map((result: any) => {\n      return result.activeUserAction;\n    }));\n  }\n\n  unblock(id: string, unblock: boolean = false, admin: boolean = false) {\n    return this.set(\n      BLOCK_USER,\n      {\n        id,\n        unblock,\n        admin\n      }, {}).pipe(map((result: any) => {\n        return result.blockUser;\n      })\n      );\n  }\n\n  sendEmailActive(id: string, email: string) {\n    return this.set(\n      ACTIVE_EMAIL_USER, {\n      id,\n      email\n    }).pipe(map((result: any) => {\n      return result.activeUserEmail;\n    }));\n  }\n\n  next() {\n    return this.get(\n      USERS_ID_QUERY, {}, {}, false\n    ).pipe(map((result: any) => {\n      return result.userId.userId;\n    }));\n  }\n}\n\n\n\n\n\n\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// import { User } from '../models/auth.models';\n\n// @Injectable({ providedIn: 'root' })\n// export class UserProfileService {\n//     constructor(private http: HttpClient) { }\n\n//     getAll(page: number = 1, itemsPage: number = 10) {\n//         return this.http.get<User[]>(`/api/login`);\n//     }\n\n//     register(user: User) {\n//         return this.http.post(`/users/register`, user);\n//     }\n// }\n","import gql from 'graphql-tag';\nimport { USER_FRAGMENT } from 'src/app/@graphql/operations/fragment/user';\n\nexport const REGISTER_USER = gql`\n   mutation addUser($user: UserInput!, $include: Boolean!) {\n      register(user: $user) {\n         status\n         message\n         user {\n            ...UserObject\n         }\n      }\n   }\n   ${USER_FRAGMENT}\n`;\n\nexport const UPDATE_USER = gql`\n   mutation updateUser($user: UserInput!, $include: Boolean!) {\n      updateUser(user: $user) {\n         status\n         message\n         user {\n            ...UserObject\n         }\n      }\n   }\n   ${USER_FRAGMENT}\n`;\n\nexport const BLOCK_USER = gql`\n   mutation blockUser($id: ID!, $unblock: Boolean, $admin: Boolean) {\n      blockUser(id: $id, unblock: $unblock, admin: $admin) {\n         status\n         message\n      }\n   }\n`;\n\nexport const ACTIVE_EMAIL_USER = gql`\n   mutation activeUserEmail($id: ID!, $email: String!) {\n      activeUserEmail(\n         id: $id,\n         email: $email\n      )  {\n            status\n            message\n      }\n   }\n`;\n\nexport const ACTIVE_USER = gql`\n   mutation activeUser($id: ID!, $password: String!) {\n      activeUserAction(\n         id: $id,\n         password: $password\n      )  {\n            status\n            message\n      }\n   }\n`;\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClientsModule } from './clients.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientsModule\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { ClientsComponent } from './clients.component';\nimport { TablePaginationModule } from '@shared/table-pagination/table-pagination.module';\n\n\n@NgModule({\n  declarations: [\n    ClientsComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientsRoutingModule,\n    TablePaginationModule\n  ]\n})\nexport class ClientsModule { }\n"],"names":[],"sourceRoot":"webpack:///"}