{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/@pages/catalogs/clients/clients.component.ts","./src/app/@pages/catalogs/clients/clients.component.html","./src/app/@shared/capture-cat/capture-cat.module.ts","./src/app/@shared/importar/importar.module.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ACTIVE_FILTERS } from '@core/constants/filters';\nimport { IResultData } from '@core/interfaces/result-data.interface';\nimport { ITableColumns } from '@core/interfaces/table-columns.interface';\nimport { IUser } from '@core/interfaces/user.interface';\nimport { UsersService } from '@core/services/user.service';\nimport { USERS_LIST_QUERY } from '@graphql/operations/query/users';\nimport { optionsWithDetails } from '@shared/alert/alerts';\nimport { basicAlert } from '@shared/alert/toasts';\nimport { TYPE_ALERT } from '@shared/alert/values.config';\nimport { TablePaginationService } from '@shared/table-pagination/table-pagination.service';\nimport { DocumentNode } from 'graphql';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  query: DocumentNode = USERS_LIST_QUERY;\n  context: object;\n  itemsPage: number;\n  resultData: IResultData;\n  include: boolean;\n  columns: Array<ITableColumns>;\n  filterActiveValues: ACTIVE_FILTERS;\n  mostrarBoton: boolean;\n  user: IUser;\n  editMode = false;\n  nextId: string;\n  title: string = 'Catálogo de Clientes';\n  role: string = 'CLIENT';\n\n  @Input() datosEnviar: FormData = new FormData();\n\n  constructor(\n    private usersService: UsersService,\n    private tablePaginationService: TablePaginationService\n  ) { }\n\n  ngOnInit(): void {\n    this.context = {};\n    this.itemsPage = 10;\n    this.resultData = {\n      listKey: 'users',\n      definitionKey: 'users',\n      title: 'Usuarios'\n    };\n    this.include = false;\n    this.filterActiveValues = ACTIVE_FILTERS.ALL;\n    this.role = 'CLIENT';\n    this.columns = [\n      {\n        property: 'id',\n        label: '#',\n        class: 'clave'\n      },\n      {\n        property: 'name',\n        label: 'Nombre',\n        class: ''\n      },\n      {\n        property: 'lastname',\n        label: 'Apellido',\n        class: ''\n      },\n      {\n        property: 'email',\n        label: 'Correo',\n        class: ''\n      },\n      {\n        property: 'role',\n        label: 'Permisos',\n        class: ''\n      },\n      {\n        property: 'active',\n        label: 'Activo?',\n        class: 'clave'\n      }\n    ];\n  }\n\n  async takeAction($event) {\n    // Obtiene la informacion para las acciones\n    const action = $event[0];\n    const user = $event[1];\n    this.mostrarBoton = true;\n    switch (action) {\n      case 'info':                                      // Mostrar información del elemento\n        this.mostrarBoton = false;\n        break;\n      case 'block':                                     // Bloquear elemento\n        this.unblockForm(user, false);\n        break;\n      case 'unblock':                                     // Bloquear elemento\n        this.unblockForm(user, true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onNewCatalog() {\n    let user: IUser;\n    return user = {\n      id: this.nextId,\n      email: '',\n      password: '',\n      name: '',\n      lastname: '',\n      active: false\n    };\n  }\n\n  userBack(event) {\n    this.user = event;\n    if (this.editMode) {                        // Si es un  para editar\n      this.updateCatalog(this.user);\n    } else {                                    // Si es un usero nuevo\n      this.addCatalog(this.user);\n    }\n  }\n\n  private addCatalog(user: IUser) {\n    this.usersService.register(user).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n          this.usersService.sendEmailActive(res.user.id, user.email).subscribe(\n            resEmail => {\n              (resEmail.status) ?\n                basicAlert(TYPE_ALERT.SUCCESS, resEmail.message) :\n                basicAlert(TYPE_ALERT.WARNING, resEmail.message);\n            }\n          );\n          setTimeout(() => {\n            this.tablePaginationService.refreshTable();\n          }, 2900);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n\n  private updateCatalog(user: IUser) {\n    if (user.email !== '') {\n      this.usersService.update(user).subscribe(\n        (res: any) => {\n          if (res.status) {\n            basicAlert(TYPE_ALERT.SUCCESS, res.message);\n            setTimeout(() => {\n              this.tablePaginationService.refreshTable();\n            }, 2900);\n          } else {\n            basicAlert(TYPE_ALERT.WARNING, res.message);\n          }\n        }\n      );\n    }\n  }\n\n  private async unblockForm(brand: any, unblock: boolean) {\n    const result = (unblock) ?\n      await optionsWithDetails(\n        'Desbloquear?',\n        `Si desbloqueas el item seleccionado, se mostrara en la lista`,\n        450,\n        'No desbloquear',\n        'Si desbloquear'\n      )\n      :\n      await optionsWithDetails(\n        'Bloquear?',\n        `Si bloqueas el item seleccionado, no se mostrara en la lista`,\n        430,\n        'No bloquear',\n        'Si bloquear'\n      );\n    if (result === false) {             // Si el resultado es falso, queremos bloquear\n      this.unblockBrand(brand.id, unblock, true);\n    }\n    this.tablePaginationService.refreshTable();\n  }\n\n  private unblockBrand(id: string, unblock: boolean = false, admin: boolean = false) {\n    this.usersService.unblock(id, unblock, admin).subscribe(\n      (res: any) => {\n        if (res.status) {\n          basicAlert(TYPE_ALERT.SUCCESS, res.message);\n        } else {\n          basicAlert(TYPE_ALERT.WARNING, res.message);\n        }\n      }\n    );\n  }\n}\n","<app-table-pagination [query]=\"query\" [context]=\"context\" [itemsPage]=\"itemsPage\" [resultData]=\"resultData\"\n  [include]=\"include\" [tableColumns]=\"columns\" [filterActiveValues]=\"filterActiveValues\" [title]=\"title\" [role]=\"role\"\n  (manageItem)=\"takeAction($event)\"></app-table-pagination>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CaptureCatComponent } from './capture-cat.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbCarouselModule, NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\n\n@NgModule({\n  declarations: [\n    CaptureCatComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbNavModule,\n    NgSelectModule,\n    NgxDropzoneModule,\n    DropzoneModule,\n    NgbCarouselModule\n  ],\n  exports: [\n    CaptureCatComponent\n  ]\n})\nexport class CaptureCatModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImportarComponent } from './importar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LightboxModule } from 'ngx-lightbox';\nimport { CsvModule } from '@ctrl/ngx-csv';\n\n@NgModule({\n  declarations: [\n    ImportarComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LightboxModule,\n    NgbNavModule,\n    CsvModule\n  ],\n  exports: [\n    ImportarComponent\n  ]\n})\nexport class ImportarModule { }\n"],"names":[],"sourceRoot":"webpack:///"}